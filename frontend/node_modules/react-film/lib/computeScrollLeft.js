"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = computeScrollLeft;

var browser = _interopRequireWildcard(require("./browser"));

function computeScrollLeft(dir, scrollable, itemContainer, index) {
  var rtl = dir === 'rtl';

  if (itemContainer && scrollable) {
    var items = itemContainer.children; // This will enumerate <li> inside <FilmStrip>

    var item = items[Math.max(0, Math.min(items.length - 1, index))];

    if (item) {
      if (scrollable.offsetWidth === scrollable.scrollWidth) {
        return 0;
      }

      var result = item.offsetLeft + (item.offsetWidth - scrollable.offsetWidth) / 2;

      if (rtl) {
        result = Math.min(result, 0);
        result = Math.max(result, scrollable.offsetWidth - scrollable.scrollWidth);
      } else {
        result = Math.max(result, 0);
        result = Math.min(result, scrollable.scrollWidth - scrollable.offsetWidth);
      }

      if (rtl) {
        if (browser.chrome) {
          result += scrollable.scrollWidth - scrollable.offsetWidth;
        } else if (browser.edgeUWP || browser.internetExplorer) {
          result = -result;
        }
      }

      return result;
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb21wdXRlU2Nyb2xsTGVmdC5qcyJdLCJuYW1lcyI6WyJjb21wdXRlU2Nyb2xsTGVmdCIsImRpciIsInNjcm9sbGFibGUiLCJpdGVtQ29udGFpbmVyIiwiaW5kZXgiLCJydGwiLCJpdGVtcyIsImNoaWxkcmVuIiwiaXRlbSIsIk1hdGgiLCJtYXgiLCJtaW4iLCJsZW5ndGgiLCJvZmZzZXRXaWR0aCIsInNjcm9sbFdpZHRoIiwicmVzdWx0Iiwib2Zmc2V0TGVmdCIsImJyb3dzZXIiLCJjaHJvbWUiLCJlZGdlVVdQIiwiaW50ZXJuZXRFeHBsb3JlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBRWUsU0FBU0EsaUJBQVQsQ0FBMkJDLEdBQTNCLEVBQWdDQyxVQUFoQyxFQUE0Q0MsYUFBNUMsRUFBMkRDLEtBQTNELEVBQWtFO0FBQy9FLE1BQU1DLEdBQUcsR0FBR0osR0FBRyxLQUFLLEtBQXBCOztBQUVBLE1BQUlFLGFBQWEsSUFBSUQsVUFBckIsRUFBaUM7QUFDL0IsUUFBTUksS0FBSyxHQUFHSCxhQUFhLENBQUNJLFFBQTVCLENBRCtCLENBQ087O0FBQ3RDLFFBQU1DLElBQUksR0FBR0YsS0FBSyxDQUFDRyxJQUFJLENBQUNDLEdBQUwsQ0FBUyxDQUFULEVBQVlELElBQUksQ0FBQ0UsR0FBTCxDQUFTTCxLQUFLLENBQUNNLE1BQU4sR0FBZSxDQUF4QixFQUEyQlIsS0FBM0IsQ0FBWixDQUFELENBQWxCOztBQUVBLFFBQUlJLElBQUosRUFBVTtBQUNSLFVBQUlOLFVBQVUsQ0FBQ1csV0FBWCxLQUEyQlgsVUFBVSxDQUFDWSxXQUExQyxFQUF1RDtBQUNyRCxlQUFPLENBQVA7QUFDRDs7QUFFRCxVQUFJQyxNQUFNLEdBQUdQLElBQUksQ0FBQ1EsVUFBTCxHQUFrQixDQUFDUixJQUFJLENBQUNLLFdBQUwsR0FBbUJYLFVBQVUsQ0FBQ1csV0FBL0IsSUFBOEMsQ0FBN0U7O0FBRUEsVUFBSVIsR0FBSixFQUFTO0FBQ1BVLFFBQUFBLE1BQU0sR0FBR04sSUFBSSxDQUFDRSxHQUFMLENBQVNJLE1BQVQsRUFBaUIsQ0FBakIsQ0FBVDtBQUNBQSxRQUFBQSxNQUFNLEdBQUdOLElBQUksQ0FBQ0MsR0FBTCxDQUFTSyxNQUFULEVBQWlCYixVQUFVLENBQUNXLFdBQVgsR0FBeUJYLFVBQVUsQ0FBQ1ksV0FBckQsQ0FBVDtBQUNELE9BSEQsTUFHTztBQUNMQyxRQUFBQSxNQUFNLEdBQUdOLElBQUksQ0FBQ0MsR0FBTCxDQUFTSyxNQUFULEVBQWlCLENBQWpCLENBQVQ7QUFDQUEsUUFBQUEsTUFBTSxHQUFHTixJQUFJLENBQUNFLEdBQUwsQ0FBU0ksTUFBVCxFQUFpQmIsVUFBVSxDQUFDWSxXQUFYLEdBQXlCWixVQUFVLENBQUNXLFdBQXJELENBQVQ7QUFDRDs7QUFFRCxVQUFJUixHQUFKLEVBQVM7QUFDUCxZQUFJWSxPQUFPLENBQUNDLE1BQVosRUFBb0I7QUFDbEJILFVBQUFBLE1BQU0sSUFBSWIsVUFBVSxDQUFDWSxXQUFYLEdBQXlCWixVQUFVLENBQUNXLFdBQTlDO0FBQ0QsU0FGRCxNQUVPLElBQUlJLE9BQU8sQ0FBQ0UsT0FBUixJQUFtQkYsT0FBTyxDQUFDRyxnQkFBL0IsRUFBaUQ7QUFDdERMLFVBQUFBLE1BQU0sR0FBRyxDQUFDQSxNQUFWO0FBQ0Q7QUFDRjs7QUFDRCxhQUFPQSxNQUFQO0FBQ0Q7QUFDRjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYnJvd3NlciBmcm9tICcuL2Jyb3dzZXInO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wdXRlU2Nyb2xsTGVmdChkaXIsIHNjcm9sbGFibGUsIGl0ZW1Db250YWluZXIsIGluZGV4KSB7XG4gIGNvbnN0IHJ0bCA9IGRpciA9PT0gJ3J0bCc7XG5cbiAgaWYgKGl0ZW1Db250YWluZXIgJiYgc2Nyb2xsYWJsZSkge1xuICAgIGNvbnN0IGl0ZW1zID0gaXRlbUNvbnRhaW5lci5jaGlsZHJlbjsgLy8gVGhpcyB3aWxsIGVudW1lcmF0ZSA8bGk+IGluc2lkZSA8RmlsbVN0cmlwPlxuICAgIGNvbnN0IGl0ZW0gPSBpdGVtc1tNYXRoLm1heCgwLCBNYXRoLm1pbihpdGVtcy5sZW5ndGggLSAxLCBpbmRleCkpXTtcblxuICAgIGlmIChpdGVtKSB7XG4gICAgICBpZiAoc2Nyb2xsYWJsZS5vZmZzZXRXaWR0aCA9PT0gc2Nyb2xsYWJsZS5zY3JvbGxXaWR0aCkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH1cblxuICAgICAgbGV0IHJlc3VsdCA9IGl0ZW0ub2Zmc2V0TGVmdCArIChpdGVtLm9mZnNldFdpZHRoIC0gc2Nyb2xsYWJsZS5vZmZzZXRXaWR0aCkgLyAyO1xuXG4gICAgICBpZiAocnRsKSB7XG4gICAgICAgIHJlc3VsdCA9IE1hdGgubWluKHJlc3VsdCwgMCk7XG4gICAgICAgIHJlc3VsdCA9IE1hdGgubWF4KHJlc3VsdCwgc2Nyb2xsYWJsZS5vZmZzZXRXaWR0aCAtIHNjcm9sbGFibGUuc2Nyb2xsV2lkdGgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0ID0gTWF0aC5tYXgocmVzdWx0LCAwKTtcbiAgICAgICAgcmVzdWx0ID0gTWF0aC5taW4ocmVzdWx0LCBzY3JvbGxhYmxlLnNjcm9sbFdpZHRoIC0gc2Nyb2xsYWJsZS5vZmZzZXRXaWR0aCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChydGwpIHtcbiAgICAgICAgaWYgKGJyb3dzZXIuY2hyb21lKSB7XG4gICAgICAgICAgcmVzdWx0ICs9IHNjcm9sbGFibGUuc2Nyb2xsV2lkdGggLSBzY3JvbGxhYmxlLm9mZnNldFdpZHRoO1xuICAgICAgICB9IGVsc2UgaWYgKGJyb3dzZXIuZWRnZVVXUCB8fCBicm93c2VyLmludGVybmV0RXhwbG9yZXIpIHtcbiAgICAgICAgICByZXN1bHQgPSAtcmVzdWx0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfVxufVxuIl19