"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = normalizeStyleOptions;
var DOT_BOX_SIZE = 20;
var DOT_SIZE = 6;
var FLIPPER_BOX_WIDTH = 60;
var FLIPPER_SIZE = 40;
var SCROLL_BAR_HEIGHT = 8;
var SCROLL_BAR_MARGIN = 4;

function normalizeStyleOptions() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      autoCenter = _ref.autoCenter,
      autoHide = _ref.autoHide,
      autoHideFlipperOnEdge = _ref.autoHideFlipperOnEdge,
      cursor = _ref.cursor,
      dir = _ref.dir,
      dotBoxSize = _ref.dotBoxSize,
      dotSize = _ref.dotSize,
      flipperBlurFocusOnClick = _ref.flipperBlurFocusOnClick,
      flipperBoxWidth = _ref.flipperBoxWidth,
      flipperSize = _ref.flipperSize,
      leftFlipperText = _ref.leftFlipperText,
      rightFlipperText = _ref.rightFlipperText,
      scrollBarHeight = _ref.scrollBarHeight,
      scrollBarMargin = _ref.scrollBarMargin,
      showDots = _ref.showDots,
      showFlipper = _ref.showFlipper,
      showScrollBar = _ref.showScrollBar;

  var rtl = dir === 'rtl';
  return {
    autoCenter: autoCenter !== false,
    autoHide: autoHide !== false,
    autoHideFlipperOnEdge: autoHideFlipperOnEdge !== false,
    cursor: typeof cursor === 'undefined' ? 'pointer' : cursor,
    dotBoxSize: typeof dotBoxSize === 'number' ? dotBoxSize : DOT_BOX_SIZE,
    dotSize: typeof dotSize === 'number' ? dotSize : DOT_SIZE,
    flipperBlurFocusOnClick: flipperBlurFocusOnClick === true,
    flipperBoxWidth: typeof flipperBoxWidth === 'number' ? flipperBoxWidth : FLIPPER_BOX_WIDTH,
    flipperSize: typeof flipperSize === 'number' ? flipperSize : FLIPPER_SIZE,
    leftFlipperText: leftFlipperText || (rtl ? '>' : '<'),
    rightFlipperText: rightFlipperText || (rtl ? '<' : '>'),
    scrollBarHeight: typeof scrollBarHeight === 'number' ? scrollBarHeight : SCROLL_BAR_HEIGHT,
    scrollBarMargin: typeof scrollBarMargin === 'number' ? scrollBarMargin : SCROLL_BAR_MARGIN,
    showDots: showDots !== false,
    showFlipper: showFlipper !== false,
    showScrollBar: showScrollBar !== false
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXRjaFN0eWxlT3B0aW9ucy5qcyJdLCJuYW1lcyI6WyJET1RfQk9YX1NJWkUiLCJET1RfU0laRSIsIkZMSVBQRVJfQk9YX1dJRFRIIiwiRkxJUFBFUl9TSVpFIiwiU0NST0xMX0JBUl9IRUlHSFQiLCJTQ1JPTExfQkFSX01BUkdJTiIsIm5vcm1hbGl6ZVN0eWxlT3B0aW9ucyIsImF1dG9DZW50ZXIiLCJhdXRvSGlkZSIsImF1dG9IaWRlRmxpcHBlck9uRWRnZSIsImN1cnNvciIsImRpciIsImRvdEJveFNpemUiLCJkb3RTaXplIiwiZmxpcHBlckJsdXJGb2N1c09uQ2xpY2siLCJmbGlwcGVyQm94V2lkdGgiLCJmbGlwcGVyU2l6ZSIsImxlZnRGbGlwcGVyVGV4dCIsInJpZ2h0RmxpcHBlclRleHQiLCJzY3JvbGxCYXJIZWlnaHQiLCJzY3JvbGxCYXJNYXJnaW4iLCJzaG93RG90cyIsInNob3dGbGlwcGVyIiwic2hvd1Njcm9sbEJhciIsInJ0bCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsWUFBWSxHQUFHLEVBQXJCO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLENBQWpCO0FBRUEsSUFBTUMsaUJBQWlCLEdBQUcsRUFBMUI7QUFDQSxJQUFNQyxZQUFZLEdBQUcsRUFBckI7QUFFQSxJQUFNQyxpQkFBaUIsR0FBRyxDQUExQjtBQUNBLElBQU1DLGlCQUFpQixHQUFHLENBQTFCOztBQUVlLFNBQVNDLHFCQUFULEdBa0JQO0FBQUEsaUZBQUosRUFBSTtBQUFBLE1BakJOQyxVQWlCTSxRQWpCTkEsVUFpQk07QUFBQSxNQWhCTkMsUUFnQk0sUUFoQk5BLFFBZ0JNO0FBQUEsTUFmTkMscUJBZU0sUUFmTkEscUJBZU07QUFBQSxNQWROQyxNQWNNLFFBZE5BLE1BY007QUFBQSxNQWJOQyxHQWFNLFFBYk5BLEdBYU07QUFBQSxNQVpOQyxVQVlNLFFBWk5BLFVBWU07QUFBQSxNQVhOQyxPQVdNLFFBWE5BLE9BV007QUFBQSxNQVZOQyx1QkFVTSxRQVZOQSx1QkFVTTtBQUFBLE1BVE5DLGVBU00sUUFUTkEsZUFTTTtBQUFBLE1BUk5DLFdBUU0sUUFSTkEsV0FRTTtBQUFBLE1BUE5DLGVBT00sUUFQTkEsZUFPTTtBQUFBLE1BTk5DLGdCQU1NLFFBTk5BLGdCQU1NO0FBQUEsTUFMTkMsZUFLTSxRQUxOQSxlQUtNO0FBQUEsTUFKTkMsZUFJTSxRQUpOQSxlQUlNO0FBQUEsTUFITkMsUUFHTSxRQUhOQSxRQUdNO0FBQUEsTUFGTkMsV0FFTSxRQUZOQSxXQUVNO0FBQUEsTUFETkMsYUFDTSxRQUROQSxhQUNNOztBQUNOLE1BQU1DLEdBQUcsR0FBR2IsR0FBRyxLQUFLLEtBQXBCO0FBRUEsU0FBTztBQUNMSixJQUFBQSxVQUFVLEVBQUVBLFVBQVUsS0FBSyxLQUR0QjtBQUVMQyxJQUFBQSxRQUFRLEVBQUVBLFFBQVEsS0FBSyxLQUZsQjtBQUdMQyxJQUFBQSxxQkFBcUIsRUFBRUEscUJBQXFCLEtBQUssS0FINUM7QUFJTEMsSUFBQUEsTUFBTSxFQUFFLE9BQU9BLE1BQVAsS0FBa0IsV0FBbEIsR0FBZ0MsU0FBaEMsR0FBNENBLE1BSi9DO0FBS0xFLElBQUFBLFVBQVUsRUFBRSxPQUFPQSxVQUFQLEtBQXNCLFFBQXRCLEdBQWlDQSxVQUFqQyxHQUE4Q1osWUFMckQ7QUFNTGEsSUFBQUEsT0FBTyxFQUFFLE9BQU9BLE9BQVAsS0FBbUIsUUFBbkIsR0FBOEJBLE9BQTlCLEdBQXdDWixRQU41QztBQU9MYSxJQUFBQSx1QkFBdUIsRUFBRUEsdUJBQXVCLEtBQUssSUFQaEQ7QUFRTEMsSUFBQUEsZUFBZSxFQUFFLE9BQU9BLGVBQVAsS0FBMkIsUUFBM0IsR0FBc0NBLGVBQXRDLEdBQXdEYixpQkFScEU7QUFTTGMsSUFBQUEsV0FBVyxFQUFFLE9BQU9BLFdBQVAsS0FBdUIsUUFBdkIsR0FBa0NBLFdBQWxDLEdBQWdEYixZQVR4RDtBQVVMYyxJQUFBQSxlQUFlLEVBQUVBLGVBQWUsS0FBS08sR0FBRyxHQUFHLEdBQUgsR0FBUyxHQUFqQixDQVYzQjtBQVdMTixJQUFBQSxnQkFBZ0IsRUFBRUEsZ0JBQWdCLEtBQUtNLEdBQUcsR0FBRyxHQUFILEdBQVMsR0FBakIsQ0FYN0I7QUFZTEwsSUFBQUEsZUFBZSxFQUFFLE9BQU9BLGVBQVAsS0FBMkIsUUFBM0IsR0FBc0NBLGVBQXRDLEdBQXdEZixpQkFacEU7QUFhTGdCLElBQUFBLGVBQWUsRUFBRSxPQUFPQSxlQUFQLEtBQTJCLFFBQTNCLEdBQXNDQSxlQUF0QyxHQUF3RGYsaUJBYnBFO0FBY0xnQixJQUFBQSxRQUFRLEVBQUVBLFFBQVEsS0FBSyxLQWRsQjtBQWVMQyxJQUFBQSxXQUFXLEVBQUVBLFdBQVcsS0FBSyxLQWZ4QjtBQWdCTEMsSUFBQUEsYUFBYSxFQUFFQSxhQUFhLEtBQUs7QUFoQjVCLEdBQVA7QUFrQkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBET1RfQk9YX1NJWkUgPSAyMDtcbmNvbnN0IERPVF9TSVpFID0gNjtcblxuY29uc3QgRkxJUFBFUl9CT1hfV0lEVEggPSA2MDtcbmNvbnN0IEZMSVBQRVJfU0laRSA9IDQwO1xuXG5jb25zdCBTQ1JPTExfQkFSX0hFSUdIVCA9IDg7XG5jb25zdCBTQ1JPTExfQkFSX01BUkdJTiA9IDQ7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZVN0eWxlT3B0aW9ucyh7XG4gIGF1dG9DZW50ZXIsXG4gIGF1dG9IaWRlLFxuICBhdXRvSGlkZUZsaXBwZXJPbkVkZ2UsXG4gIGN1cnNvcixcbiAgZGlyLFxuICBkb3RCb3hTaXplLFxuICBkb3RTaXplLFxuICBmbGlwcGVyQmx1ckZvY3VzT25DbGljayxcbiAgZmxpcHBlckJveFdpZHRoLFxuICBmbGlwcGVyU2l6ZSxcbiAgbGVmdEZsaXBwZXJUZXh0LFxuICByaWdodEZsaXBwZXJUZXh0LFxuICBzY3JvbGxCYXJIZWlnaHQsXG4gIHNjcm9sbEJhck1hcmdpbixcbiAgc2hvd0RvdHMsXG4gIHNob3dGbGlwcGVyLFxuICBzaG93U2Nyb2xsQmFyXG59ID0ge30pIHtcbiAgY29uc3QgcnRsID0gZGlyID09PSAncnRsJztcblxuICByZXR1cm4ge1xuICAgIGF1dG9DZW50ZXI6IGF1dG9DZW50ZXIgIT09IGZhbHNlLFxuICAgIGF1dG9IaWRlOiBhdXRvSGlkZSAhPT0gZmFsc2UsXG4gICAgYXV0b0hpZGVGbGlwcGVyT25FZGdlOiBhdXRvSGlkZUZsaXBwZXJPbkVkZ2UgIT09IGZhbHNlLFxuICAgIGN1cnNvcjogdHlwZW9mIGN1cnNvciA9PT0gJ3VuZGVmaW5lZCcgPyAncG9pbnRlcicgOiBjdXJzb3IsXG4gICAgZG90Qm94U2l6ZTogdHlwZW9mIGRvdEJveFNpemUgPT09ICdudW1iZXInID8gZG90Qm94U2l6ZSA6IERPVF9CT1hfU0laRSxcbiAgICBkb3RTaXplOiB0eXBlb2YgZG90U2l6ZSA9PT0gJ251bWJlcicgPyBkb3RTaXplIDogRE9UX1NJWkUsXG4gICAgZmxpcHBlckJsdXJGb2N1c09uQ2xpY2s6IGZsaXBwZXJCbHVyRm9jdXNPbkNsaWNrID09PSB0cnVlLFxuICAgIGZsaXBwZXJCb3hXaWR0aDogdHlwZW9mIGZsaXBwZXJCb3hXaWR0aCA9PT0gJ251bWJlcicgPyBmbGlwcGVyQm94V2lkdGggOiBGTElQUEVSX0JPWF9XSURUSCxcbiAgICBmbGlwcGVyU2l6ZTogdHlwZW9mIGZsaXBwZXJTaXplID09PSAnbnVtYmVyJyA/IGZsaXBwZXJTaXplIDogRkxJUFBFUl9TSVpFLFxuICAgIGxlZnRGbGlwcGVyVGV4dDogbGVmdEZsaXBwZXJUZXh0IHx8IChydGwgPyAnPicgOiAnPCcpLFxuICAgIHJpZ2h0RmxpcHBlclRleHQ6IHJpZ2h0RmxpcHBlclRleHQgfHwgKHJ0bCA/ICc8JyA6ICc+JyksXG4gICAgc2Nyb2xsQmFySGVpZ2h0OiB0eXBlb2Ygc2Nyb2xsQmFySGVpZ2h0ID09PSAnbnVtYmVyJyA/IHNjcm9sbEJhckhlaWdodCA6IFNDUk9MTF9CQVJfSEVJR0hULFxuICAgIHNjcm9sbEJhck1hcmdpbjogdHlwZW9mIHNjcm9sbEJhck1hcmdpbiA9PT0gJ251bWJlcicgPyBzY3JvbGxCYXJNYXJnaW4gOiBTQ1JPTExfQkFSX01BUkdJTixcbiAgICBzaG93RG90czogc2hvd0RvdHMgIT09IGZhbHNlLFxuICAgIHNob3dGbGlwcGVyOiBzaG93RmxpcHBlciAhPT0gZmFsc2UsXG4gICAgc2hvd1Njcm9sbEJhcjogc2hvd1Njcm9sbEJhciAhPT0gZmFsc2VcbiAgfTtcbn1cbiJdfQ==