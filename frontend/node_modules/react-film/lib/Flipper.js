"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var browser = _interopRequireWildcard(require("./browser"));

var _useDir3 = _interopRequireDefault(require("./hooks/useDir"));

var _useScrollBarPercentage = _interopRequireDefault(require("./hooks/useScrollBarPercentage"));

var _useScrollOneLeft = _interopRequireDefault(require("./hooks/useScrollOneLeft"));

var _useScrollOneRight = _interopRequireDefault(require("./hooks/useScrollOneRight"));

var Flipper = function Flipper(_ref) {
  var ariaLabel = _ref['aria-label'],
      blurFocusOnClick = _ref.blurFocusOnClick,
      children = _ref.children,
      mode = _ref.mode;

  var _useDir = (0, _useDir3.default)(),
      _useDir2 = (0, _slicedToArray2.default)(_useDir, 1),
      dir = _useDir2[0];

  var _useScrollBarPercenta = (0, _useScrollBarPercentage.default)(),
      _useScrollBarPercenta2 = (0, _slicedToArray2.default)(_useScrollBarPercenta, 1),
      scrollBarPercentage = _useScrollBarPercenta2[0];

  var buttonRef = (0, _react.useRef)();
  var left = mode === 'left';
  var scrollOneLeft = (0, _useScrollOneLeft.default)();
  var scrollOneRight = (0, _useScrollOneRight.default)();
  var handleClick = (0, _react.useCallback)(function () {
    left ? scrollOneLeft() : scrollOneRight();
    blurFocusOnClick && buttonRef.current && buttonRef.current.blur();
  }, [blurFocusOnClick, buttonRef, left, scrollOneLeft, scrollOneRight]);
  var handleKeyDown = (0, _react.useCallback)(function (event) {
    var key = event.key;

    if (key === 'Enter' || key === ' ') {
      event.preventDefault();
      left ? scrollOneLeft() : scrollOneRight();
    }
  }, [left, scrollOneLeft, scrollOneRight]);
  var hide;

  if (dir === 'rtl' && !browser.chrome) {
    if (left) {
      hide = scrollBarPercentage === '100%' || scrollBarPercentage === '-100%';
    } else {
      hide = scrollBarPercentage === '0%';
    }
  } else {
    if (left) {
      hide = scrollBarPercentage === '0%';
    } else {
      hide = scrollBarPercentage === '100%';
    }
  }

  return /*#__PURE__*/_react.default.createElement("button", {
    "aria-label": ariaLabel || (left ? 'left' : 'right'),
    className: (0, _classnames.default)('react-film__flipper', 'react-film__main__overlay', {
      'react-film__flipper--left': left,
      'react-film__flipper--right': !left
    }),
    onClick: handleClick,
    onKeyDown: handleKeyDown,
    ref: buttonRef,
    type: "button"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('react-film__flipper__slider', 'react-film__main__slider', {
      'react-film__main__slider--hide': hide,
      'react-film__main__slider--left': left,
      'react-film__main__slider--right': !left
    })
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "react-film__flipper__body"
  }, children)));
};

Flipper.defaultProps = {
  'aria-label': undefined,
  blurFocusOnClick: false,
  children: undefined,
  mode: 'left'
};
Flipper.propTypes = {
  'aria-label': _propTypes.default.string,
  blurFocusOnClick: _propTypes.default.bool,
  children: _propTypes.default.any,
  mode: _propTypes.default.oneOf(['left', 'right'])
};
var _default = Flipper;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9GbGlwcGVyLmpzIl0sIm5hbWVzIjpbIkZsaXBwZXIiLCJhcmlhTGFiZWwiLCJibHVyRm9jdXNPbkNsaWNrIiwiY2hpbGRyZW4iLCJtb2RlIiwiZGlyIiwic2Nyb2xsQmFyUGVyY2VudGFnZSIsImJ1dHRvblJlZiIsImxlZnQiLCJzY3JvbGxPbmVMZWZ0Iiwic2Nyb2xsT25lUmlnaHQiLCJoYW5kbGVDbGljayIsImN1cnJlbnQiLCJibHVyIiwiaGFuZGxlS2V5RG93biIsImV2ZW50Iiwia2V5IiwicHJldmVudERlZmF1bHQiLCJoaWRlIiwiYnJvd3NlciIsImNocm9tZSIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImJvb2wiLCJhbnkiLCJvbmVPZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLE9BQW1FO0FBQUEsTUFBbERDLFNBQWtELFFBQWhFLFlBQWdFO0FBQUEsTUFBdkNDLGdCQUF1QyxRQUF2Q0EsZ0JBQXVDO0FBQUEsTUFBckJDLFFBQXFCLFFBQXJCQSxRQUFxQjtBQUFBLE1BQVhDLElBQVcsUUFBWEEsSUFBVzs7QUFBQSxnQkFDbkUsdUJBRG1FO0FBQUE7QUFBQSxNQUMxRUMsR0FEMEU7O0FBQUEsOEJBRW5ELHNDQUZtRDtBQUFBO0FBQUEsTUFFMUVDLG1CQUYwRTs7QUFHakYsTUFBTUMsU0FBUyxHQUFHLG9CQUFsQjtBQUNBLE1BQU1DLElBQUksR0FBR0osSUFBSSxLQUFLLE1BQXRCO0FBQ0EsTUFBTUssYUFBYSxHQUFHLGdDQUF0QjtBQUNBLE1BQU1DLGNBQWMsR0FBRyxpQ0FBdkI7QUFFQSxNQUFNQyxXQUFXLEdBQUcsd0JBQVksWUFBTTtBQUNwQ0gsSUFBQUEsSUFBSSxHQUFHQyxhQUFhLEVBQWhCLEdBQXFCQyxjQUFjLEVBQXZDO0FBQ0FSLElBQUFBLGdCQUFnQixJQUFJSyxTQUFTLENBQUNLLE9BQTlCLElBQXlDTCxTQUFTLENBQUNLLE9BQVYsQ0FBa0JDLElBQWxCLEVBQXpDO0FBQ0QsR0FIbUIsRUFHakIsQ0FBQ1gsZ0JBQUQsRUFBbUJLLFNBQW5CLEVBQThCQyxJQUE5QixFQUFvQ0MsYUFBcEMsRUFBbURDLGNBQW5ELENBSGlCLENBQXBCO0FBS0EsTUFBTUksYUFBYSxHQUFHLHdCQUNwQixVQUFBQyxLQUFLLEVBQUk7QUFBQSxRQUNDQyxHQURELEdBQ1NELEtBRFQsQ0FDQ0MsR0FERDs7QUFHUCxRQUFJQSxHQUFHLEtBQUssT0FBUixJQUFtQkEsR0FBRyxLQUFLLEdBQS9CLEVBQW9DO0FBQ2xDRCxNQUFBQSxLQUFLLENBQUNFLGNBQU47QUFDQVQsTUFBQUEsSUFBSSxHQUFHQyxhQUFhLEVBQWhCLEdBQXFCQyxjQUFjLEVBQXZDO0FBQ0Q7QUFDRixHQVJtQixFQVNwQixDQUFDRixJQUFELEVBQU9DLGFBQVAsRUFBc0JDLGNBQXRCLENBVG9CLENBQXRCO0FBWUEsTUFBSVEsSUFBSjs7QUFFQSxNQUFJYixHQUFHLEtBQUssS0FBUixJQUFpQixDQUFDYyxPQUFPLENBQUNDLE1BQTlCLEVBQXNDO0FBQ3BDLFFBQUlaLElBQUosRUFBVTtBQUNSVSxNQUFBQSxJQUFJLEdBQUdaLG1CQUFtQixLQUFLLE1BQXhCLElBQWtDQSxtQkFBbUIsS0FBSyxPQUFqRTtBQUNELEtBRkQsTUFFTztBQUNMWSxNQUFBQSxJQUFJLEdBQUdaLG1CQUFtQixLQUFLLElBQS9CO0FBQ0Q7QUFDRixHQU5ELE1BTU87QUFDTCxRQUFJRSxJQUFKLEVBQVU7QUFDUlUsTUFBQUEsSUFBSSxHQUFHWixtQkFBbUIsS0FBSyxJQUEvQjtBQUNELEtBRkQsTUFFTztBQUNMWSxNQUFBQSxJQUFJLEdBQUdaLG1CQUFtQixLQUFLLE1BQS9CO0FBQ0Q7QUFDRjs7QUFFRCxzQkFDRTtBQUNFLGtCQUFZTCxTQUFTLEtBQUtPLElBQUksR0FBRyxNQUFILEdBQVksT0FBckIsQ0FEdkI7QUFFRSxJQUFBLFNBQVMsRUFBRSx5QkFBVyxxQkFBWCxFQUFrQywyQkFBbEMsRUFBK0Q7QUFDeEUsbUNBQTZCQSxJQUQyQztBQUV4RSxvQ0FBOEIsQ0FBQ0E7QUFGeUMsS0FBL0QsQ0FGYjtBQU1FLElBQUEsT0FBTyxFQUFFRyxXQU5YO0FBT0UsSUFBQSxTQUFTLEVBQUVHLGFBUGI7QUFRRSxJQUFBLEdBQUcsRUFBRVAsU0FSUDtBQVNFLElBQUEsSUFBSSxFQUFDO0FBVFAsa0JBV0U7QUFDRSxJQUFBLFNBQVMsRUFBRSx5QkFBVyw2QkFBWCxFQUEwQywwQkFBMUMsRUFBc0U7QUFDL0Usd0NBQWtDVyxJQUQ2QztBQUUvRSx3Q0FBa0NWLElBRjZDO0FBRy9FLHlDQUFtQyxDQUFDQTtBQUgyQyxLQUF0RTtBQURiLGtCQU9FO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUE0Q0wsUUFBNUMsQ0FQRixDQVhGLENBREY7QUF1QkQsQ0FoRUQ7O0FBa0VBSCxPQUFPLENBQUNxQixZQUFSLEdBQXVCO0FBQ3JCLGdCQUFjQyxTQURPO0FBRXJCcEIsRUFBQUEsZ0JBQWdCLEVBQUUsS0FGRztBQUdyQkMsRUFBQUEsUUFBUSxFQUFFbUIsU0FIVztBQUlyQmxCLEVBQUFBLElBQUksRUFBRTtBQUplLENBQXZCO0FBT0FKLE9BQU8sQ0FBQ3VCLFNBQVIsR0FBb0I7QUFDbEIsZ0JBQWNDLG1CQUFVQyxNQUROO0FBRWxCdkIsRUFBQUEsZ0JBQWdCLEVBQUVzQixtQkFBVUUsSUFGVjtBQUdsQnZCLEVBQUFBLFFBQVEsRUFBRXFCLG1CQUFVRyxHQUhGO0FBSWxCdkIsRUFBQUEsSUFBSSxFQUFFb0IsbUJBQVVJLEtBQVYsQ0FBZ0IsQ0FBQyxNQUFELEVBQVMsT0FBVCxDQUFoQjtBQUpZLENBQXBCO2VBT2U1QixPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCAqIGFzIGJyb3dzZXIgZnJvbSAnLi9icm93c2VyJztcbmltcG9ydCB1c2VEaXIgZnJvbSAnLi9ob29rcy91c2VEaXInO1xuaW1wb3J0IHVzZVNjcm9sbEJhclBlcmNlbnRhZ2UgZnJvbSAnLi9ob29rcy91c2VTY3JvbGxCYXJQZXJjZW50YWdlJztcbmltcG9ydCB1c2VTY3JvbGxPbmVMZWZ0IGZyb20gJy4vaG9va3MvdXNlU2Nyb2xsT25lTGVmdCc7XG5pbXBvcnQgdXNlU2Nyb2xsT25lUmlnaHQgZnJvbSAnLi9ob29rcy91c2VTY3JvbGxPbmVSaWdodCc7XG5cbmNvbnN0IEZsaXBwZXIgPSAoeyAnYXJpYS1sYWJlbCc6IGFyaWFMYWJlbCwgYmx1ckZvY3VzT25DbGljaywgY2hpbGRyZW4sIG1vZGUgfSkgPT4ge1xuICBjb25zdCBbZGlyXSA9IHVzZURpcigpO1xuICBjb25zdCBbc2Nyb2xsQmFyUGVyY2VudGFnZV0gPSB1c2VTY3JvbGxCYXJQZXJjZW50YWdlKCk7XG4gIGNvbnN0IGJ1dHRvblJlZiA9IHVzZVJlZigpO1xuICBjb25zdCBsZWZ0ID0gbW9kZSA9PT0gJ2xlZnQnO1xuICBjb25zdCBzY3JvbGxPbmVMZWZ0ID0gdXNlU2Nyb2xsT25lTGVmdCgpO1xuICBjb25zdCBzY3JvbGxPbmVSaWdodCA9IHVzZVNjcm9sbE9uZVJpZ2h0KCk7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgbGVmdCA/IHNjcm9sbE9uZUxlZnQoKSA6IHNjcm9sbE9uZVJpZ2h0KCk7XG4gICAgYmx1ckZvY3VzT25DbGljayAmJiBidXR0b25SZWYuY3VycmVudCAmJiBidXR0b25SZWYuY3VycmVudC5ibHVyKCk7XG4gIH0sIFtibHVyRm9jdXNPbkNsaWNrLCBidXR0b25SZWYsIGxlZnQsIHNjcm9sbE9uZUxlZnQsIHNjcm9sbE9uZVJpZ2h0XSk7XG5cbiAgY29uc3QgaGFuZGxlS2V5RG93biA9IHVzZUNhbGxiYWNrKFxuICAgIGV2ZW50ID0+IHtcbiAgICAgIGNvbnN0IHsga2V5IH0gPSBldmVudDtcblxuICAgICAgaWYgKGtleSA9PT0gJ0VudGVyJyB8fCBrZXkgPT09ICcgJykge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZWZ0ID8gc2Nyb2xsT25lTGVmdCgpIDogc2Nyb2xsT25lUmlnaHQoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFtsZWZ0LCBzY3JvbGxPbmVMZWZ0LCBzY3JvbGxPbmVSaWdodF1cbiAgKTtcblxuICBsZXQgaGlkZTtcblxuICBpZiAoZGlyID09PSAncnRsJyAmJiAhYnJvd3Nlci5jaHJvbWUpIHtcbiAgICBpZiAobGVmdCkge1xuICAgICAgaGlkZSA9IHNjcm9sbEJhclBlcmNlbnRhZ2UgPT09ICcxMDAlJyB8fCBzY3JvbGxCYXJQZXJjZW50YWdlID09PSAnLTEwMCUnO1xuICAgIH0gZWxzZSB7XG4gICAgICBoaWRlID0gc2Nyb2xsQmFyUGVyY2VudGFnZSA9PT0gJzAlJztcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGxlZnQpIHtcbiAgICAgIGhpZGUgPSBzY3JvbGxCYXJQZXJjZW50YWdlID09PSAnMCUnO1xuICAgIH0gZWxzZSB7XG4gICAgICBoaWRlID0gc2Nyb2xsQmFyUGVyY2VudGFnZSA9PT0gJzEwMCUnO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGJ1dHRvblxuICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsIHx8IChsZWZ0ID8gJ2xlZnQnIDogJ3JpZ2h0Jyl9XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3JlYWN0LWZpbG1fX2ZsaXBwZXInLCAncmVhY3QtZmlsbV9fbWFpbl9fb3ZlcmxheScsIHtcbiAgICAgICAgJ3JlYWN0LWZpbG1fX2ZsaXBwZXItLWxlZnQnOiBsZWZ0LFxuICAgICAgICAncmVhY3QtZmlsbV9fZmxpcHBlci0tcmlnaHQnOiAhbGVmdFxuICAgICAgfSl9XG4gICAgICBvbkNsaWNrPXtoYW5kbGVDbGlja31cbiAgICAgIG9uS2V5RG93bj17aGFuZGxlS2V5RG93bn1cbiAgICAgIHJlZj17YnV0dG9uUmVmfVxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgPlxuICAgICAgPGRpdlxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3JlYWN0LWZpbG1fX2ZsaXBwZXJfX3NsaWRlcicsICdyZWFjdC1maWxtX19tYWluX19zbGlkZXInLCB7XG4gICAgICAgICAgJ3JlYWN0LWZpbG1fX21haW5fX3NsaWRlci0taGlkZSc6IGhpZGUsXG4gICAgICAgICAgJ3JlYWN0LWZpbG1fX21haW5fX3NsaWRlci0tbGVmdCc6IGxlZnQsXG4gICAgICAgICAgJ3JlYWN0LWZpbG1fX21haW5fX3NsaWRlci0tcmlnaHQnOiAhbGVmdFxuICAgICAgICB9KX1cbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZWFjdC1maWxtX19mbGlwcGVyX19ib2R5XCI+e2NoaWxkcmVufTwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9idXR0b24+XG4gICk7XG59O1xuXG5GbGlwcGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgJ2FyaWEtbGFiZWwnOiB1bmRlZmluZWQsXG4gIGJsdXJGb2N1c09uQ2xpY2s6IGZhbHNlLFxuICBjaGlsZHJlbjogdW5kZWZpbmVkLFxuICBtb2RlOiAnbGVmdCdcbn07XG5cbkZsaXBwZXIucHJvcFR5cGVzID0ge1xuICAnYXJpYS1sYWJlbCc6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGJsdXJGb2N1c09uQ2xpY2s6IFByb3BUeXBlcy5ib29sLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLmFueSxcbiAgbW9kZTogUHJvcFR5cGVzLm9uZU9mKFsnbGVmdCcsICdyaWdodCddKVxufTtcblxuZXhwb3J0IGRlZmF1bHQgRmxpcHBlcjtcbiJdfQ==