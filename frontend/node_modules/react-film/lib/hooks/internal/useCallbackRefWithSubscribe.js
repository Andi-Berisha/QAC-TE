"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useCallbackRefWithSubscribe;

var _react = require("react");

var SUBSCRIBER_LIMIT = 10;

function useCallbackRefWithSubscribe() {
  return (0, _react.useMemo)(function () {
    var subscriptions = [];

    var callbackRef = function callbackRef(current) {
      callbackRef.current = current;
      subscriptions.forEach(function (subscription) {
        subscription.cleanup && subscription.cleanup();
        subscription.cleanup = subscription.callback(current);
      });
    };

    callbackRef.subscribe = function (callback) {
      var subscription = {
        callback: callback
      };
      subscriptions.push(subscription);

      if (subscriptions.length >= SUBSCRIBER_LIMIT) {
        console.warn("useSubscribe: Reaching maximum limit of subscribers (".concat(SUBSCRIBER_LIMIT, "), please make sure your code did clean up properly."));
      }

      subscription.cleanup = callback(callbackRef.current);
      return function () {
        subscription.cleanup && subscription.cleanup();
        var index = subscriptions.indexOf(subscription);
        ~index && subscriptions.splice(index, 1);
      };
    };

    return callbackRef;
  }, []);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy9pbnRlcm5hbC91c2VDYWxsYmFja1JlZldpdGhTdWJzY3JpYmUuanMiXSwibmFtZXMiOlsiU1VCU0NSSUJFUl9MSU1JVCIsInVzZUNhbGxiYWNrUmVmV2l0aFN1YnNjcmliZSIsInN1YnNjcmlwdGlvbnMiLCJjYWxsYmFja1JlZiIsImN1cnJlbnQiLCJmb3JFYWNoIiwic3Vic2NyaXB0aW9uIiwiY2xlYW51cCIsImNhbGxiYWNrIiwic3Vic2NyaWJlIiwicHVzaCIsImxlbmd0aCIsImNvbnNvbGUiLCJ3YXJuIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsZ0JBQWdCLEdBQUcsRUFBekI7O0FBRWUsU0FBU0MsMkJBQVQsR0FBdUM7QUFDcEQsU0FBTyxvQkFBUSxZQUFNO0FBQ25CLFFBQU1DLGFBQWEsR0FBRyxFQUF0Qjs7QUFFQSxRQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFBQyxPQUFPLEVBQUk7QUFDN0JELE1BQUFBLFdBQVcsQ0FBQ0MsT0FBWixHQUFzQkEsT0FBdEI7QUFFQUYsTUFBQUEsYUFBYSxDQUFDRyxPQUFkLENBQXNCLFVBQUFDLFlBQVksRUFBSTtBQUNwQ0EsUUFBQUEsWUFBWSxDQUFDQyxPQUFiLElBQXdCRCxZQUFZLENBQUNDLE9BQWIsRUFBeEI7QUFDQUQsUUFBQUEsWUFBWSxDQUFDQyxPQUFiLEdBQXVCRCxZQUFZLENBQUNFLFFBQWIsQ0FBc0JKLE9BQXRCLENBQXZCO0FBQ0QsT0FIRDtBQUlELEtBUEQ7O0FBU0FELElBQUFBLFdBQVcsQ0FBQ00sU0FBWixHQUF3QixVQUFBRCxRQUFRLEVBQUk7QUFDbEMsVUFBTUYsWUFBWSxHQUFHO0FBQUVFLFFBQUFBLFFBQVEsRUFBUkE7QUFBRixPQUFyQjtBQUVBTixNQUFBQSxhQUFhLENBQUNRLElBQWQsQ0FBbUJKLFlBQW5COztBQUVBLFVBQUlKLGFBQWEsQ0FBQ1MsTUFBZCxJQUF3QlgsZ0JBQTVCLEVBQThDO0FBQzVDWSxRQUFBQSxPQUFPLENBQUNDLElBQVIsZ0VBQzBEYixnQkFEMUQ7QUFHRDs7QUFFRE0sTUFBQUEsWUFBWSxDQUFDQyxPQUFiLEdBQXVCQyxRQUFRLENBQUNMLFdBQVcsQ0FBQ0MsT0FBYixDQUEvQjtBQUVBLGFBQU8sWUFBTTtBQUNYRSxRQUFBQSxZQUFZLENBQUNDLE9BQWIsSUFBd0JELFlBQVksQ0FBQ0MsT0FBYixFQUF4QjtBQUVBLFlBQU1PLEtBQUssR0FBR1osYUFBYSxDQUFDYSxPQUFkLENBQXNCVCxZQUF0QixDQUFkO0FBRUEsU0FBQ1EsS0FBRCxJQUFVWixhQUFhLENBQUNjLE1BQWQsQ0FBcUJGLEtBQXJCLEVBQTRCLENBQTVCLENBQVY7QUFDRCxPQU5EO0FBT0QsS0FwQkQ7O0FBc0JBLFdBQU9YLFdBQVA7QUFDRCxHQW5DTSxFQW1DSixFQW5DSSxDQUFQO0FBb0NEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcblxuY29uc3QgU1VCU0NSSUJFUl9MSU1JVCA9IDEwO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VDYWxsYmFja1JlZldpdGhTdWJzY3JpYmUoKSB7XG4gIHJldHVybiB1c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCBzdWJzY3JpcHRpb25zID0gW107XG5cbiAgICBjb25zdCBjYWxsYmFja1JlZiA9IGN1cnJlbnQgPT4ge1xuICAgICAgY2FsbGJhY2tSZWYuY3VycmVudCA9IGN1cnJlbnQ7XG5cbiAgICAgIHN1YnNjcmlwdGlvbnMuZm9yRWFjaChzdWJzY3JpcHRpb24gPT4ge1xuICAgICAgICBzdWJzY3JpcHRpb24uY2xlYW51cCAmJiBzdWJzY3JpcHRpb24uY2xlYW51cCgpO1xuICAgICAgICBzdWJzY3JpcHRpb24uY2xlYW51cCA9IHN1YnNjcmlwdGlvbi5jYWxsYmFjayhjdXJyZW50KTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjYWxsYmFja1JlZi5zdWJzY3JpYmUgPSBjYWxsYmFjayA9PiB7XG4gICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSB7IGNhbGxiYWNrIH07XG5cbiAgICAgIHN1YnNjcmlwdGlvbnMucHVzaChzdWJzY3JpcHRpb24pO1xuXG4gICAgICBpZiAoc3Vic2NyaXB0aW9ucy5sZW5ndGggPj0gU1VCU0NSSUJFUl9MSU1JVCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgYHVzZVN1YnNjcmliZTogUmVhY2hpbmcgbWF4aW11bSBsaW1pdCBvZiBzdWJzY3JpYmVycyAoJHtTVUJTQ1JJQkVSX0xJTUlUfSksIHBsZWFzZSBtYWtlIHN1cmUgeW91ciBjb2RlIGRpZCBjbGVhbiB1cCBwcm9wZXJseS5gXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIHN1YnNjcmlwdGlvbi5jbGVhbnVwID0gY2FsbGJhY2soY2FsbGJhY2tSZWYuY3VycmVudCk7XG5cbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHN1YnNjcmlwdGlvbi5jbGVhbnVwICYmIHN1YnNjcmlwdGlvbi5jbGVhbnVwKCk7XG5cbiAgICAgICAgY29uc3QgaW5kZXggPSBzdWJzY3JpcHRpb25zLmluZGV4T2Yoc3Vic2NyaXB0aW9uKTtcblxuICAgICAgICB+aW5kZXggJiYgc3Vic2NyaXB0aW9ucy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgfTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGNhbGxiYWNrUmVmO1xuICB9LCBbXSk7XG59XG4iXX0=