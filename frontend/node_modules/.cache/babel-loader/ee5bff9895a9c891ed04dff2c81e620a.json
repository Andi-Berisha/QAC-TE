{"ast":null,"code":"import _slicedToArray from\"C:/Users/andib/Desktop/QAC-TE/QAC-TE/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import{useState,useEffect}from'react';import{Spinner}from'reactstrap';import{DISCUSSION_URL}from'../../Resources/CONSTS.json';import IndividualDiscussion from'./IndividualDiscussion';import{jsx as _jsx}from\"react/jsx-runtime\";var ReadDiscussion=function ReadDiscussion(_ref){var msg=_ref.msg,trigger=_ref.trigger;// states\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),DiscussionList=_useState2[0],setDiscussionList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoaded=_useState4[0],setIsLoaded=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];// useEffect -> triggers a sideEffect\nuseEffect(function(){axios.get(\"\".concat(DISCUSSION_URL,\"/getAll\")).then(function(res){setIsLoaded(true);setDiscussionList(res.data);}).catch(function(err){setIsLoaded(true);setError(err.message);});},[msg]);if(error){return/*#__PURE__*/_jsx(\"p\",{children:error});}else if(!isLoaded){return/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\"});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:DiscussionList.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(IndividualDiscussion,{item:item,trigger:trigger},item._id)});})});}};export default ReadDiscussion;","map":{"version":3,"sources":["C:/Users/andib/Desktop/QAC-TE/QAC-TE/frontend/src/Pages/Discussion Board/ReadDiscussion.jsx"],"names":["axios","useState","useEffect","Spinner","DISCUSSION_URL","IndividualDiscussion","ReadDiscussion","msg","trigger","DiscussionList","setDiscussionList","isLoaded","setIsLoaded","error","setError","get","then","res","data","catch","err","message","map","item","_id"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,OAAT,KAAwB,YAAxB,CACA,OAASC,cAAT,KAA+B,6BAA/B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,C,2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAsB,IAAnBC,CAAAA,GAAmB,MAAnBA,GAAmB,CAAdC,OAAc,MAAdA,OAAc,CAEzC;AAFyC,cAGGP,QAAQ,CAAC,EAAD,CAHX,wCAGlCQ,cAHkC,eAGlBC,iBAHkB,8BAITT,QAAQ,CAAC,KAAD,CAJC,yCAIlCU,QAJkC,eAIxBC,WAJwB,8BAKfX,QAAQ,CAAC,EAAD,CALO,yCAKlCY,KALkC,eAK3BC,QAL2B,eAOzC;AACAZ,SAAS,CAAC,UAAM,CACZF,KAAK,CAACe,GAAN,WAAaX,cAAb,aACKY,IADL,CACU,SAACC,GAAD,CAAS,CACXL,WAAW,CAAC,IAAD,CAAX,CACAF,iBAAiB,CAACO,GAAG,CAACC,IAAL,CAAjB,CACH,CAJL,EAKKC,KALL,CAKW,SAACC,GAAD,CAAS,CACZR,WAAW,CAAC,IAAD,CAAX,CACAE,QAAQ,CAACM,GAAG,CAACC,OAAL,CAAR,CACH,CARL,EASH,CAVQ,CAUN,CAACd,GAAD,CAVM,CAAT,CAYA,GAAIM,KAAJ,CAAW,CACP,mBAAO,mBAAIA,KAAJ,EAAP,CACH,CAFD,IAEO,IAAI,CAACF,QAAL,CAAe,CAClB,mBAAO,KAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,IAAI,CAAC,QAAjC,EAAP,CACH,CAFM,IAEA,CACH,mBAEI,YAAK,SAAS,CAAC,KAAf,UACKF,cAAc,CAACa,GAAf,CAAmB,SAACC,IAAD,qBAChB,YAAK,SAAS,CAAC,UAAf,uBACI,KAAC,oBAAD,EAAqC,IAAI,CAAEA,IAA3C,CAAiD,OAAO,CAAEf,OAA1D,EAA2Be,IAAI,CAACC,GAAhC,CADJ,EADgB,EAAnB,CADL,EAFJ,CAWH,CACJ,CArCD,CAuCA,cAAelB,CAAAA,cAAf","sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Spinner } from 'reactstrap';\r\nimport { DISCUSSION_URL } from '../../Resources/CONSTS.json';\r\nimport IndividualDiscussion from './IndividualDiscussion';\r\n\r\nconst ReadDiscussion = ({ msg, trigger }) => {\r\n\r\n    // states\r\n    const [DiscussionList, setDiscussionList] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    // useEffect -> triggers a sideEffect\r\n    useEffect(() => {\r\n        axios.get(`${DISCUSSION_URL}/getAll`)\r\n            .then((res) => {\r\n                setIsLoaded(true);\r\n                setDiscussionList(res.data);\r\n            })\r\n            .catch((err) => {\r\n                setIsLoaded(true);\r\n                setError(err.message);\r\n            })\r\n    }, [msg] );\r\n\r\n    if (error) {\r\n        return <p>{error}</p>\r\n    } else if (!isLoaded) {\r\n        return <Spinner animation=\"border\" role=\"status\" />\r\n    } else {\r\n        return (\r\n            \r\n            <div className=\"row\">\r\n                {DiscussionList.map((item) => (\r\n                    <div className=\"col-md-6\">\r\n                        <IndividualDiscussion key={item._id} item={item} trigger={trigger} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ReadDiscussion;"]},"metadata":{},"sourceType":"module"}