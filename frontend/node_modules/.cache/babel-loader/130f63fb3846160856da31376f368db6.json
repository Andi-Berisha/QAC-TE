{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/andib/Desktop/QAC-TE/QAC-TE/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/andib/Desktop/QAC-TE/QAC-TE/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{CardElement,useStripe,useElements}from'@stripe/react-stripe-js';import axios from\"axios\";import{BOOKINGS_URL}from\"../../Resources/CONSTS.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CARD_OPTIONS={iconStyle:'solid',hidePostalCode:true,style:{// base: {\n//   iconColor: '#c4f0ff',\n//   fontWeight: 500,\n//   fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n//   fontSize: '16px',\n//   fontSmoothing: 'antialiased',\n//   ':-webkit-autofill': {color: '#fce883'},\n//   '::placeholder': {color: '#87bbfd'},\n// },\ninvalid:{iconColor:'#ff0000',color:'#ff0000'}}};var CheckoutForm=function CheckoutForm(_ref){var success=_ref.success,amount=_ref.amount,bookingID=_ref.bookingID;var stripe=useStripe();var elements=useElements();var updateDatabase=function updateDatabase(){// e.preventDefault();\naxios.patch(\"\".concat(BOOKINGS_URL,\"/update/\").concat(bookingID),{paid:true}).then(function(res){// trigger(res.data);\n// toggle();\nconsole.log(bookingID);console.log('succesfully updated db');}).catch(function(err){// trigger(err.data);\nconsole.log(err);});};var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var cardElement,_yield$stripe$createP,error,paymentMethod,id,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Block native form submission.\nevent.preventDefault();if(!(!stripe||!elements)){_context.next=3;break;}return _context.abrupt(\"return\");case 3:// Get a reference to a mounted CardElement. Elements knows how\n// to find your CardElement because there can only ever be one of\n// each type of element.\ncardElement=elements.getElement(CardElement);// Use your card Element with other Stripe.js APIs\n_context.next=6;return stripe.createPaymentMethod({type:'card',card:cardElement});case 6:_yield$stripe$createP=_context.sent;error=_yield$stripe$createP.error;paymentMethod=_yield$stripe$createP.paymentMethod;if(!error){_context.next=13;break;}console.log('[error]',error);_context.next=28;break;case 13:console.log('[PaymentMethod]',paymentMethod);id=paymentMethod.id;_context.prev=15;_context.next=18;return axios.post(\"http://localhost:5019/Stripe/charge\",{id:id,amount:amount});case 18:_yield$axios$post=_context.sent;data=_yield$axios$post.data;console.log(data);success();updateDatabase();// return (<Link to={{ pathname: `/` }} style={{ color: 'black' }}></Link>);\n_context.next=28;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](15);console.log(_context.t0);case 28:case\"end\":return _context.stop();}}},_callee,null,[[15,25]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:{color:'black',maxWidth:'400px',margin:'0 auto'},children:[/*#__PURE__*/_jsx(CardElement,{options:CARD_OPTIONS}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!stripe,children:\"Pay\"})]});};export default CheckoutForm;","map":{"version":3,"sources":["C:/Users/andib/Desktop/QAC-TE/QAC-TE/frontend/src/Pages/BookingsAndPayment/CheckoutForm.jsx"],"names":["CardElement","useStripe","useElements","axios","BOOKINGS_URL","CARD_OPTIONS","iconStyle","hidePostalCode","style","invalid","iconColor","color","CheckoutForm","success","amount","bookingID","stripe","elements","updateDatabase","patch","paid","then","res","console","log","catch","err","handleSubmit","event","preventDefault","cardElement","getElement","createPaymentMethod","type","card","error","paymentMethod","id","post","data","maxWidth","margin"],"mappings":"qUAAA,OAASA,WAAT,CAAsBC,SAAtB,CAAiCC,WAAjC,KAAoD,yBAApD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,6BAA7B,C,wFAGA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,OADQ,CAEnBC,cAAc,CAAE,IAFG,CAGnBC,KAAK,CAAE,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,OAAO,CAAE,CACPC,SAAS,CAAE,SADJ,CAEPC,KAAK,CAAE,SAFA,CAVJ,CAHY,CAArB,CAsBA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAoC,IAAjCC,CAAAA,OAAiC,MAAjCA,OAAiC,CAAxBC,MAAwB,MAAxBA,MAAwB,CAAhBC,SAAgB,MAAhBA,SAAgB,CACvD,GAAMC,CAAAA,MAAM,CAAGf,SAAS,EAAxB,CACA,GAAMgB,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CAEA,GAAMgB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B;AACAf,KAAK,CAACgB,KAAN,WAAef,YAAf,oBAAsCW,SAAtC,EACI,CAAEK,IAAI,CAAE,IAAR,CADJ,EAEKC,IAFL,CAEU,SAACC,GAAD,CAAS,CACX;AACA;AACAC,OAAO,CAACC,GAAR,CAAYT,SAAZ,EACAQ,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACH,CAPL,EAQKC,KARL,CAQW,SAACC,GAAD,CAAO,CACV;AACAH,OAAO,CAACC,GAAR,CAAYE,GAAZ,EACH,CAXL,EAYD,CAdD,CAgBA,GAAMC,CAAAA,YAAY,2FAAG,iBAAOC,KAAP,sMACnB;AACAA,KAAK,CAACC,cAAN,GAFmB,KAIf,CAACb,MAAD,EAAW,CAACC,QAJG,kEAUnB;AACA;AACA;AACMa,WAba,CAaCb,QAAQ,CAACc,UAAT,CAAoB/B,WAApB,CAbD,CAenB;AAfmB,sBAgBoBgB,CAAAA,MAAM,CAACgB,mBAAP,CAA2B,CAChEC,IAAI,CAAE,MAD0D,CAEhEC,IAAI,CAAEJ,WAF0D,CAA3B,CAhBpB,4CAgBXK,KAhBW,uBAgBXA,KAhBW,CAgBJC,aAhBI,uBAgBJA,aAhBI,KAqBfD,KArBe,0BAsBjBZ,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBW,KAAvB,EAtBiB,+BAwBjBZ,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BY,aAA/B,EACQC,EAzBS,CAyBFD,aAzBE,CAyBTC,EAzBS,yCA4BQlC,CAAAA,KAAK,CAACmC,IAAN,CAAW,qCAAX,CAAkD,CAAED,EAAE,CAAFA,EAAF,CAAMvB,MAAM,CAAEA,MAAd,CAAlD,CA5BR,yCA4BPyB,IA5BO,mBA4BPA,IA5BO,CA6BfhB,OAAO,CAACC,GAAR,CAAYe,IAAZ,EACA1B,OAAO,GACPK,cAAc,GACd;AAhCe,kFAkCfK,OAAO,CAACC,GAAR,cAlCe,sEAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAuCA,mBACE,cAAM,QAAQ,CAAEA,YAAhB,CAA8B,KAAK,CAAE,CAAEhB,KAAK,CAAE,OAAT,CAAkB6B,QAAQ,CAAE,OAA5B,CAAqCC,MAAM,CAAE,QAA7C,CAArC,wBAGE,KAAC,WAAD,EAAa,OAAO,CAAEpC,YAAtB,EAHF,cAIE,eAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAE,CAACW,MAAjC,iBAJF,GADF,CAUD,CArED,CAuEA,cAAeJ,CAAAA,YAAf","sourcesContent":["import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport axios from \"axios\";\r\nimport { BOOKINGS_URL } from \"../../Resources/CONSTS.json\";\r\n\r\n\r\nconst CARD_OPTIONS = {\r\n  iconStyle: 'solid',\r\n  hidePostalCode: true,\r\n  style: {\r\n    // base: {\r\n    //   iconColor: '#c4f0ff',\r\n    //   fontWeight: 500,\r\n    //   fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\r\n    //   fontSize: '16px',\r\n    //   fontSmoothing: 'antialiased',\r\n    //   ':-webkit-autofill': {color: '#fce883'},\r\n    //   '::placeholder': {color: '#87bbfd'},\r\n    // },\r\n    invalid: {\r\n      iconColor: '#ff0000',\r\n      color: '#ff0000',\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\nconst CheckoutForm = ({ success, amount, bookingID }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const updateDatabase = () => {\r\n    // e.preventDefault();\r\n    axios.patch(`${BOOKINGS_URL}/update/${bookingID}`,\r\n        { paid: true })\r\n        .then((res) => {\r\n            // trigger(res.data);\r\n            // toggle();\r\n            console.log(bookingID);\r\n            console.log('succesfully updated db');\r\n        })\r\n        .catch((err)=>{\r\n            // trigger(err.data);\r\n            console.log(err);\r\n        })\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // Use your card Element with other Stripe.js APIs\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log('[error]', error);\r\n    } else {\r\n      console.log('[PaymentMethod]', paymentMethod);\r\n      const { id } = paymentMethod;\r\n\r\n      try {\r\n        const { data } = await axios.post(\"http://localhost:5019/Stripe/charge\", { id, amount: amount });\r\n        console.log(data);\r\n        success();\r\n        updateDatabase();\r\n        // return (<Link to={{ pathname: `/` }} style={{ color: 'black' }}></Link>);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ color: 'black', maxWidth: '400px', margin: '0 auto' }}>\r\n      {/* <label>Name on credit card:</label><br/> */}\r\n      {/* <input type=\"text\" name=\"name\" /> */}\r\n      <CardElement options={CARD_OPTIONS} />\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;"]},"metadata":{},"sourceType":"module"}