{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar browser = _interopRequireWildcard(require(\"./browser\"));\n\nvar _useDir3 = _interopRequireDefault(require(\"./hooks/useDir\"));\n\nvar _useScrollBarPercentage = _interopRequireDefault(require(\"./hooks/useScrollBarPercentage\"));\n\nvar _useScrollOneLeft = _interopRequireDefault(require(\"./hooks/useScrollOneLeft\"));\n\nvar _useScrollOneRight = _interopRequireDefault(require(\"./hooks/useScrollOneRight\"));\n\nvar Flipper = function Flipper(_ref) {\n  var ariaLabel = _ref['aria-label'],\n      blurFocusOnClick = _ref.blurFocusOnClick,\n      children = _ref.children,\n      mode = _ref.mode;\n\n  var _useDir = (0, _useDir3.default)(),\n      _useDir2 = (0, _slicedToArray2.default)(_useDir, 1),\n      dir = _useDir2[0];\n\n  var _useScrollBarPercenta = (0, _useScrollBarPercentage.default)(),\n      _useScrollBarPercenta2 = (0, _slicedToArray2.default)(_useScrollBarPercenta, 1),\n      scrollBarPercentage = _useScrollBarPercenta2[0];\n\n  var buttonRef = (0, _react.useRef)();\n  var left = mode === 'left';\n  var scrollOneLeft = (0, _useScrollOneLeft.default)();\n  var scrollOneRight = (0, _useScrollOneRight.default)();\n  var handleClick = (0, _react.useCallback)(function () {\n    left ? scrollOneLeft() : scrollOneRight();\n    blurFocusOnClick && buttonRef.current && buttonRef.current.blur();\n  }, [blurFocusOnClick, buttonRef, left, scrollOneLeft, scrollOneRight]);\n  var handleKeyDown = (0, _react.useCallback)(function (event) {\n    var key = event.key;\n\n    if (key === 'Enter' || key === ' ') {\n      event.preventDefault();\n      left ? scrollOneLeft() : scrollOneRight();\n    }\n  }, [left, scrollOneLeft, scrollOneRight]);\n  var hide;\n\n  if (dir === 'rtl' && !browser.chrome) {\n    if (left) {\n      hide = scrollBarPercentage === '100%' || scrollBarPercentage === '-100%';\n    } else {\n      hide = scrollBarPercentage === '0%';\n    }\n  } else {\n    if (left) {\n      hide = scrollBarPercentage === '0%';\n    } else {\n      hide = scrollBarPercentage === '100%';\n    }\n  }\n\n  return /*#__PURE__*/_react.default.createElement(\"button\", {\n    \"aria-label\": ariaLabel || (left ? 'left' : 'right'),\n    className: (0, _classnames.default)('react-film__flipper', 'react-film__main__overlay', {\n      'react-film__flipper--left': left,\n      'react-film__flipper--right': !left\n    }),\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    ref: buttonRef,\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)('react-film__flipper__slider', 'react-film__main__slider', {\n      'react-film__main__slider--hide': hide,\n      'react-film__main__slider--left': left,\n      'react-film__main__slider--right': !left\n    })\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"react-film__flipper__body\"\n  }, children)));\n};\n\nFlipper.defaultProps = {\n  'aria-label': undefined,\n  blurFocusOnClick: false,\n  children: undefined,\n  mode: 'left'\n};\nFlipper.propTypes = {\n  'aria-label': _propTypes.default.string,\n  blurFocusOnClick: _propTypes.default.bool,\n  children: _propTypes.default.any,\n  mode: _propTypes.default.oneOf(['left', 'right'])\n};\nvar _default = Flipper;\nexports.default = _default;","map":{"version":3,"sources":["../src/Flipper.js"],"names":["Flipper","ariaLabel","blurFocusOnClick","children","mode","dir","scrollBarPercentage","buttonRef","left","scrollOneLeft","scrollOneRight","handleClick","handleKeyDown","key","event","browser","hide","PropTypes"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef } from 'react';\n\nimport * as browser from './browser';\nimport useDir from './hooks/useDir';\nimport useScrollBarPercentage from './hooks/useScrollBarPercentage';\nimport useScrollOneLeft from './hooks/useScrollOneLeft';\nimport useScrollOneRight from './hooks/useScrollOneRight';\n\nconst Flipper = ({ 'aria-label': ariaLabel, blurFocusOnClick, children, mode }) => {\n  const [dir] = useDir();\n  const [scrollBarPercentage] = useScrollBarPercentage();\n  const buttonRef = useRef();\n  const left = mode === 'left';\n  const scrollOneLeft = useScrollOneLeft();\n  const scrollOneRight = useScrollOneRight();\n\n  const handleClick = useCallback(() => {\n    left ? scrollOneLeft() : scrollOneRight();\n    blurFocusOnClick && buttonRef.current && buttonRef.current.blur();\n  }, [blurFocusOnClick, buttonRef, left, scrollOneLeft, scrollOneRight]);\n\n  const handleKeyDown = useCallback(\n    event => {\n      const { key } = event;\n\n      if (key === 'Enter' || key === ' ') {\n        event.preventDefault();\n        left ? scrollOneLeft() : scrollOneRight();\n      }\n    },\n    [left, scrollOneLeft, scrollOneRight]\n  );\n\n  let hide;\n\n  if (dir === 'rtl' && !browser.chrome) {\n    if (left) {\n      hide = scrollBarPercentage === '100%' || scrollBarPercentage === '-100%';\n    } else {\n      hide = scrollBarPercentage === '0%';\n    }\n  } else {\n    if (left) {\n      hide = scrollBarPercentage === '0%';\n    } else {\n      hide = scrollBarPercentage === '100%';\n    }\n  }\n\n  return (\n    <button\n      aria-label={ariaLabel || (left ? 'left' : 'right')}\n      className={classNames('react-film__flipper', 'react-film__main__overlay', {\n        'react-film__flipper--left': left,\n        'react-film__flipper--right': !left\n      })}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={buttonRef}\n      type=\"button\"\n    >\n      <div\n        className={classNames('react-film__flipper__slider', 'react-film__main__slider', {\n          'react-film__main__slider--hide': hide,\n          'react-film__main__slider--left': left,\n          'react-film__main__slider--right': !left\n        })}\n      >\n        <div className=\"react-film__flipper__body\">{children}</div>\n      </div>\n    </button>\n  );\n};\n\nFlipper.defaultProps = {\n  'aria-label': undefined,\n  blurFocusOnClick: false,\n  children: undefined,\n  mode: 'left'\n};\n\nFlipper.propTypes = {\n  'aria-label': PropTypes.string,\n  blurFocusOnClick: PropTypes.bool,\n  children: PropTypes.any,\n  mode: PropTypes.oneOf(['left', 'right'])\n};\n\nexport default Flipper;\n"]},"metadata":{},"sourceType":"script"}