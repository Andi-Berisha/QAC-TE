{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getView;\n\nvar browser = _interopRequireWildcard(require(\"./browser\"));\n\nvar _best = _interopRequireDefault(require(\"./util/best\"));\n\nfunction getView(dir, scrollable, itemContainer, scrollingTo) {\n  var rtl = dir === 'rtl';\n\n  if (itemContainer && scrollable) {\n    var scrollLeft = scrollingTo || scrollable.scrollLeft;\n    var trueScrollLeft = rtl ? browser.chrome ? scrollLeft - (scrollable.scrollWidth - scrollable.offsetWidth) : browser.edgeUWP || browser.internetExplorer ? -scrollLeft : scrollLeft : scrollLeft;\n    var items = itemContainer.children; // This will enumerate <li> inside <FilmStrip>\n\n    var scrollCenter = trueScrollLeft + scrollable.offsetWidth / 2;\n    var index = (0, _best.default)([].slice.call(items), function (item) {\n      var offsetCenter = item.offsetLeft + item.offsetWidth / 2;\n      return 1 / Math.abs(scrollCenter - offsetCenter);\n    });\n\n    if (~index) {\n      var item = items[index];\n      var offsetCenter = item.offsetLeft + item.offsetWidth / 2;\n      var indexFraction = index + (scrollCenter - offsetCenter) / item.offsetWidth * (rtl ? -1 : 1); // We \"fix\" indexFraction if the viewport is at the start/end of the content\n      // This is to simplify code that use Math.round(indexFraction) to find the scrollable index\n      // if (scrollLeft === 0) {\n      //   indexFraction = 0;\n      // } else if (scrollLeft >= scrollable.scrollWidth - scrollable.offsetWidth) {\n      //   indexFraction = items.length - 1;\n      // } else if (indexFraction % 1 > .99 || indexFraction % 1 < .01) {\n      //   indexFraction = Math.round(indexFraction);\n      // }\n\n      if (indexFraction % 1 > 0.99 || indexFraction % 1 < 0.01) {\n        indexFraction = Math.round(indexFraction);\n      }\n\n      var selectedIndex;\n\n      if (Math.abs(trueScrollLeft) < 1) {\n        selectedIndex = 0;\n      } else if (rtl ? trueScrollLeft <= scrollable.offsetWidth - scrollable.scrollWidth : trueScrollLeft >= scrollable.scrollWidth - scrollable.offsetWidth) {\n        selectedIndex = items.length - 1;\n      } else {\n        selectedIndex = Math.round(indexFraction);\n      }\n\n      return {\n        index: selectedIndex,\n        indexFraction: indexFraction\n      };\n    }\n  }\n}","map":{"version":3,"sources":["../src/getView.js"],"names":["rtl","dir","itemContainer","scrollLeft","scrollingTo","scrollable","trueScrollLeft","browser","items","scrollCenter","index","offsetCenter","item","Math","indexFraction","selectedIndex"],"mappings":";;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEe,SAAA,OAAA,CAAA,GAAA,EAAA,UAAA,EAAA,aAAA,EAAA,WAAA,EAA8D;AAC3E,MAAMA,GAAG,GAAGC,GAAG,KAAf,KAAA;;AAEA,MAAIC,aAAa,IAAjB,UAAA,EAAiC;AAC/B,QAAMC,UAAU,GAAGC,WAAW,IAAIC,UAAU,CAA5C,UAAA;AACA,QAAMC,cAAc,GAAGN,GAAG,GACtBO,OAAO,CAAPA,MAAAA,GACEJ,UAAU,IAAIE,UAAU,CAAVA,WAAAA,GAAyBA,UAAU,CADnDE,WACY,CADZA,GAEEA,OAAO,CAAPA,OAAAA,IAAmBA,OAAO,CAA1BA,gBAAAA,GACA,CADAA,UAAAA,GAHoB,UAAA,GAA1B,UAAA;AAOA,QAAMC,KAAK,GAAGN,aAAa,CATI,QAS/B,CAT+B,CASO;;AACtC,QAAMO,YAAY,GAAGH,cAAc,GAAGD,UAAU,CAAVA,WAAAA,GAAtC,CAAA;AACA,QAAMK,KAAK,GAAG,CAAA,GAAA,KAAA,CAAA,OAAA,EAAK,GAAA,KAAA,CAAA,IAAA,CAAL,KAAK,CAAL,EAA2B,UAAA,IAAA,EAAQ;AAC/C,UAAMC,YAAY,GAAGC,IAAI,CAAJA,UAAAA,GAAkBA,IAAI,CAAJA,WAAAA,GAAvC,CAAA;AAEA,aAAO,IAAIC,IAAI,CAAJA,GAAAA,CAASJ,YAAY,GAAhC,YAAWI,CAAX;AAHF,KAAc,CAAd;;AAMA,QAAI,CAAJ,KAAA,EAAY;AACV,UAAMD,IAAI,GAAGJ,KAAK,CAAlB,KAAkB,CAAlB;AAEA,UAAMG,YAAY,GAAGC,IAAI,CAAJA,UAAAA,GAAkBA,IAAI,CAAJA,WAAAA,GAAvC,CAAA;AACA,UAAIE,aAAa,GAAGJ,KAAK,GAAI,CAACD,YAAY,GAAb,YAAA,IAAgCG,IAAI,CAArC,WAAC,IAAqDZ,GAAG,GAAG,CAAH,CAAA,GAJ3E,CAImB,CAA7B,CAJU,CAMV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIc,aAAa,GAAbA,CAAAA,GAAAA,IAAAA,IAA4BA,aAAa,GAAbA,CAAAA,GAAhC,IAAA,EAA0D;AACxDA,QAAAA,aAAa,GAAGD,IAAI,CAAJA,KAAAA,CAAhBC,aAAgBD,CAAhBC;AACD;;AAED,UAAA,aAAA;;AAEA,UAAID,IAAI,CAAJA,GAAAA,CAAAA,cAAAA,IAAJ,CAAA,EAAkC;AAChCE,QAAAA,aAAa,GAAbA,CAAAA;AADF,OAAA,MAEO,IACLf,GAAG,GACCM,cAAc,IAAID,UAAU,CAAVA,WAAAA,GAAyBA,UAAU,CADtD,WAAA,GAECC,cAAc,IAAID,UAAU,CAAVA,WAAAA,GAAyBA,UAAU,CAHpD,WAAA,EAIL;AACAU,QAAAA,aAAa,GAAGP,KAAK,CAALA,MAAAA,GAAhBO,CAAAA;AALK,OAAA,MAMA;AACLA,QAAAA,aAAa,GAAGF,IAAI,CAAJA,KAAAA,CAAhBE,aAAgBF,CAAhBE;AACD;;AAED,aAAO;AACLL,QAAAA,KAAK,EADA,aAAA;AAELI,QAAAA,aAAa,EAAbA;AAFK,OAAP;AAID;AACF;AACF","sourcesContent":["import * as browser from './browser';\nimport best from './util/best';\n\nexport default function getView(dir, scrollable, itemContainer, scrollingTo) {\n  const rtl = dir === 'rtl';\n\n  if (itemContainer && scrollable) {\n    const scrollLeft = scrollingTo || scrollable.scrollLeft;\n    const trueScrollLeft = rtl\n      ? browser.chrome\n        ? scrollLeft - (scrollable.scrollWidth - scrollable.offsetWidth)\n        : browser.edgeUWP || browser.internetExplorer\n        ? -scrollLeft\n        : scrollLeft\n      : scrollLeft;\n    const items = itemContainer.children; // This will enumerate <li> inside <FilmStrip>\n    const scrollCenter = trueScrollLeft + scrollable.offsetWidth / 2;\n    const index = best([].slice.call(items), item => {\n      const offsetCenter = item.offsetLeft + item.offsetWidth / 2;\n\n      return 1 / Math.abs(scrollCenter - offsetCenter);\n    });\n\n    if (~index) {\n      const item = items[index];\n\n      const offsetCenter = item.offsetLeft + item.offsetWidth / 2;\n      let indexFraction = index + ((scrollCenter - offsetCenter) / item.offsetWidth) * (rtl ? -1 : 1);\n\n      // We \"fix\" indexFraction if the viewport is at the start/end of the content\n      // This is to simplify code that use Math.round(indexFraction) to find the scrollable index\n      // if (scrollLeft === 0) {\n      //   indexFraction = 0;\n      // } else if (scrollLeft >= scrollable.scrollWidth - scrollable.offsetWidth) {\n      //   indexFraction = items.length - 1;\n      // } else if (indexFraction % 1 > .99 || indexFraction % 1 < .01) {\n      //   indexFraction = Math.round(indexFraction);\n      // }\n\n      if (indexFraction % 1 > 0.99 || indexFraction % 1 < 0.01) {\n        indexFraction = Math.round(indexFraction);\n      }\n\n      let selectedIndex;\n\n      if (Math.abs(trueScrollLeft) < 1) {\n        selectedIndex = 0;\n      } else if (\n        rtl\n          ? trueScrollLeft <= scrollable.offsetWidth - scrollable.scrollWidth\n          : trueScrollLeft >= scrollable.scrollWidth - scrollable.offsetWidth\n      ) {\n        selectedIndex = items.length - 1;\n      } else {\n        selectedIndex = Math.round(indexFraction);\n      }\n\n      return {\n        index: selectedIndex,\n        indexFraction\n      };\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}