{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useAnimateScrollLeft;\n\nvar _react = require(\"react\");\n\nfunction step(from, to, stepper, index) {\n  var next = from;\n\n  for (var i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nfunction squareStepper(current, to) {\n  var sign = Math.sign(to - current);\n  var step = Math.sqrt(Math.abs(to - current));\n  var next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  } else {\n    return Math.max(to, next);\n  }\n}\n\nfunction useAnimateScrollLeft(element, to, onEnd) {\n  (0, _react.useEffect)(function () {\n    if (element) {\n      var start = Date.now();\n      var animator;\n\n      var animate = function animate(from) {\n        animator = requestAnimationFrame(function () {\n          var nextValue = step(from, to, squareStepper, (Date.now() - start) / 5);\n\n          if (Math.abs(to - nextValue) < 0.5) {\n            nextValue = to;\n          }\n\n          element.scrollLeft = nextValue;\n\n          if (to === nextValue) {\n            onEnd && onEnd(true);\n          } else {\n            animate(from);\n          }\n        });\n      };\n\n      animate(element.scrollLeft);\n      return function () {\n        return cancelAnimationFrame(animator);\n      };\n    }\n  }, [element, to, onEnd]);\n}","map":{"version":3,"sources":["../../../src/hooks/internal/useAnimateScrollLeft.js"],"names":["next","i","stepper","sign","Math","to","step","current","start","Date","animate","animator","requestAnimationFrame","nextValue","element","onEnd","cancelAnimationFrame"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,SAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAAwC;AACtC,MAAIA,IAAI,GAAR,IAAA;;AAEA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,KAAA,EAA2BA,CAA3B,EAAA,EAAgC;AAC9BD,IAAAA,IAAI,GAAGE,OAAO,CAAA,IAAA,EAAdF,EAAc,CAAdA;AACD;;AAED,SAAA,IAAA;AACD;;AAED,SAAA,aAAA,CAAA,OAAA,EAAA,EAAA,EAAoC;AAClC,MAAMG,IAAI,GAAGC,IAAI,CAAJA,IAAAA,CAAUC,EAAE,GAAzB,OAAaD,CAAb;AACA,MAAME,IAAI,GAAGF,IAAI,CAAJA,IAAAA,CAAUA,IAAI,CAAJA,GAAAA,CAASC,EAAE,GAAlC,OAAuBD,CAAVA,CAAb;AACA,MAAMJ,IAAI,GAAGO,OAAO,GAAGD,IAAI,GAA3B,IAAA;;AAEA,MAAIH,IAAI,GAAR,CAAA,EAAc;AACZ,WAAOC,IAAI,CAAJA,GAAAA,CAAAA,EAAAA,EAAP,IAAOA,CAAP;AADF,GAAA,MAEO;AACL,WAAOA,IAAI,CAAJA,GAAAA,CAAAA,EAAAA,EAAP,IAAOA,CAAP;AACD;AACF;;AAEc,SAAA,oBAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAkD;AAC/D,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAM;AACd,QAAA,OAAA,EAAa;AACX,UAAMI,KAAK,GAAGC,IAAI,CAAlB,GAAcA,EAAd;AAEA,UAAA,QAAA;;AAEA,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAAA,IAAA,EAAQ;AACtBC,QAAAA,QAAQ,GAAGC,qBAAqB,CAAC,YAAM;AACrC,cAAIC,SAAS,GAAGP,IAAI,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,EAA0B,CAACG,IAAI,CAAJA,GAAAA,KAAD,KAAA,IAA9C,CAAoB,CAApB;;AAEA,cAAIL,IAAI,CAAJA,GAAAA,CAASC,EAAE,GAAXD,SAAAA,IAAJ,GAAA,EAAoC;AAClCS,YAAAA,SAAS,GAATA,EAAAA;AACD;;AAEDC,UAAAA,OAAO,CAAPA,UAAAA,GAAAA,SAAAA;;AAEA,cAAIT,EAAE,KAAN,SAAA,EAAsB;AACpBU,YAAAA,KAAK,IAAIA,KAAK,CAAdA,IAAc,CAAdA;AADF,WAAA,MAEO;AACLL,YAAAA,OAAO,CAAPA,IAAO,CAAPA;AACD;AAbHC,SAAgC,CAAhCA;AADF,OAAA;;AAkBAD,MAAAA,OAAO,CAACI,OAAO,CAAfJ,UAAO,CAAPA;AAEA,aAAO,YAAA;AAAA,eAAMM,oBAAoB,CAA1B,QAA0B,CAA1B;AAAP,OAAA;AACD;AA3BH,GAAA,EA4BG,CAAA,OAAA,EAAA,EAAA,EA5BH,KA4BG,CA5BH;AA6BD","sourcesContent":["import { useEffect } from 'react';\n\nfunction step(from, to, stepper, index) {\n  let next = from;\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nfunction squareStepper(current, to) {\n  const sign = Math.sign(to - current);\n  const step = Math.sqrt(Math.abs(to - current));\n  const next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  } else {\n    return Math.max(to, next);\n  }\n}\n\nexport default function useAnimateScrollLeft(element, to, onEnd) {\n  useEffect(() => {\n    if (element) {\n      const start = Date.now();\n\n      let animator;\n\n      const animate = from => {\n        animator = requestAnimationFrame(() => {\n          let nextValue = step(from, to, squareStepper, (Date.now() - start) / 5);\n\n          if (Math.abs(to - nextValue) < 0.5) {\n            nextValue = to;\n          }\n\n          element.scrollLeft = nextValue;\n\n          if (to === nextValue) {\n            onEnd && onEnd(true);\n          } else {\n            animate(from);\n          }\n        });\n      };\n\n      animate(element.scrollLeft);\n\n      return () => cancelAnimationFrame(animator);\n    }\n  }, [element, to, onEnd]);\n}\n"]},"metadata":{},"sourceType":"script"}